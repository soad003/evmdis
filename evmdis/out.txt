# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP() == 0x35FAA416)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x55A373D6 == POP())

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x8DA5CB5B == POP())

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xB69EF8A8 == POP())

:label0
# Stack: []
0x41	PUSH(:label6)
0x44	PUSH(0x0)
0x46	PUSH(:label8)
0x4C	JUMP(:label5)

:label1
# Stack: [@0x13]
0x4E	PUSH(:label9)
0x51	PUSH(0x0)
0x53	DUP1
0x55	DUP1
0x5F	PUSH(0x2 ** 0xA0 - 0x1)
0x61	DUP1
0x69	JUMPI(:label14, SLOAD(POP()) & POP() == POP() & CALLER())

# Stack: [0x0 0x0 :label9 @0x13]
0x6D	JUMP(0x2)

:label2
# Stack: [@0x13]
0x6F	PUSH(:label10)
0x7D	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x1))
0x7E	DUP2
0x7F	JUMP(POP())

:label3
# Stack: [@0x13]
0x81	PUSH(:label10)
0x8F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x0))
0x90	DUP2
0x91	JUMP(POP())

:label4
# Stack: [@0x13]
0x93	PUSH(:label11)

:label5
# Stack: [[:label8 | :label11 | :label15] [0x0 | @0x13 | 0x0]]
0x97	PUSH(0x0)
0xB7	PUSH(0x2 ** 0xA0 - 0x1 & 0x2 ** 0xA0 - 0x1 & SLOAD(0x1) / 0x100 ** 0x0)
0xB8	PUSH(0x70A08231)
0xBD	PUSH(ADDRESS())
0xC0	PUSH(MLOAD(0x40))
0xC1	DUP3
0xC8	DUP1
0xC9	MSTORE(POP(), 0x2 ** 0xE0 * POP())
0xCC	PUSH(0x4 + POP())
0xCD	DUP1
0xCE	DUP3
0xD8	DUP1
0xD9	MSTORE(POP(), 0x2 ** 0xA0 - 0x1 & POP())
0xDC	PUSH(0x20 + POP())
0xDD	SWAP2
0xDE	POP()
0xDF	POP()
0xE4	PUSH(MLOAD(0x40))
0xE5	DUP1
0xE6	DUP3
0xE8	DUP1
0xEB	DUP5
0xF6	JUMPI(0x2, !CALL(GAS() - 0x61DA, POP(), 0x0, POP(), POP() - POP(), POP(), 0x20))

# Stack: [@0xDC 0x70A08231 @0xB7 0x0 [:label8 | :label11 | :label15] [0x0 | @0x13 | 0x0]]
0xF7	POP()
0xF8	POP()
0xFC	PUSH(MLOAD(MLOAD(0x40)))
0xFD	SWAP2
0xFE	POP()
0xFF	POP()
0x100	SWAP1
0x101	JUMP(POP())

:label6
# Stack: []
0x103	STOP()

:label7
# Stack: [@0xFC :label6]
0x105	POP()
0x106	JUMP(POP())

:label8
# Stack: [@0xFC 0x0 :label6]
0x108	PUSH(0x40)
0x10A	DUP1
0x10B	PUSH(MLOAD(POP()))
0x10F	PUSH(0x0)
0x111	DUP1
0x11E	DUP2
0x11F	MSTORE(POP(), 0xA9059CBB * 0x2 ** 0xE0)
0x127	PUSH(0x2 ** 0xA0 - 0x1)
0x129	DUP1
0x12D	DUP3
0x12F	MSTORE(POP() + 0x4, POP() & SLOAD(POP()))
0x132	DUP3
0x134	DUP5
0x136	MSTORE(POP() + 0x24, POP())
0x137	SWAP3
0x138	PUSH(MLOAD(POP()))
0x139	SWAP4
0x13A	SWAP5
0x13B	POP()
0x13C	SWAP2
0x13D	PUSH(POP() & SLOAD(0x1))
0x13E	SWAP3
0x13F	PUSH(0xA9059CBB)
0x144	SWAP3
0x145	PUSH(0x44)
0x147	DUP1
0x148	DUP5
0x149	PUSH(POP() + POP())
0x14A	SWAP4
0x14B	PUSH(0x20)
0x14D	SWAP4
0x14E	SWAP3
0x14F	SWAP1
0x150	DUP4
0x151	SWAP1
0x154	SWAP1
0x157	DUP2
0x158	SWAP1
0x159	DUP7
0x164	JUMPI(0x2, !CALL(GAS() - 0x61DA, POP(), POP(), POP(), POP() + POP() - POP(), POP(), POP()))

# Stack: [@0x149 0xA9059CBB @0x13D @0xFC :label6]
0x165	POP()
0x166	POP()
0x16E	POP()
0x172	JUMPI(:label7, !!MLOAD(MLOAD(0x40)))

# Stack: [@0xFC :label6]
0x176	JUMP(0x2)

:label9
# Stack: [@0xFC [0x1 | 0x0] @0x13]
0x178	PUSH(0x40)
0x17A	DUP1
0x17B	PUSH(MLOAD(POP()))
0x17C	SWAP3
0x17D	DUP4
0x17E	MSTORE(POP(), POP())
0x181	DUP3
0x182	PUSH(POP() + 0x20)
0x183	SWAP2
0x184	SWAP1
0x185	SWAP2
0x186	MSTORE(POP(), POP())
0x187	DUP1
0x188	PUSH(MLOAD(POP()))
0x189	SWAP2
0x18A	DUP3
0x18B	SWAP1
0x18F	RETURN(POP(), POP() - POP() + POP())

:label10
# Stack: [[@0x8F | @0x7D] [:label10 | :label10] @0x13]
0x191	PUSH(0x40)
0x193	DUP1
0x194	PUSH(MLOAD(POP()))
0x19C	PUSH(0x2 ** 0xA0 - 0x1)
0x19D	SWAP3
0x19E	SWAP1
0x19F	SWAP3
0x1A1	DUP2
0x1A2	MSTORE(POP(), POP() & POP())
0x1A3	PUSH(MLOAD(POP()))
0x1A4	SWAP1
0x1A5	DUP2
0x1A6	SWAP1
0x1AC	RETURN(POP(), 0x20 + POP() - POP())

:label11
# Stack: [@0xFC @0x13]
0x1AE	PUSH(0x40)
0x1B0	DUP1
0x1B1	PUSH(MLOAD(POP()))
0x1B2	SWAP2
0x1B3	DUP3
0x1B4	MSTORE(POP(), POP())
0x1B5	PUSH(MLOAD(POP()))
0x1B6	SWAP1
0x1B7	DUP2
0x1B8	SWAP1
0x1BE	RETURN(POP(), 0x20 + POP() - POP())

:label12
# Stack: [@0xFC 0x0 :label9 @0x13]
0x1C0	PUSH(0x0)
0x1C2	SWAP2
0x1C3	POP()

:label13
# Stack: [@0xFC [0x1 | 0x0] :label9 @0x13]
0x1C5	SWAP1
0x1C6	SWAP2
0x1C7	JUMP(POP())

:label14
# Stack: [0x0 0x0 :label9 @0x13]
0x1C9	PUSH(:label15)
0x1CF	JUMP(:label5)

:label15
# Stack: [@0xFC 0x0 0x0 :label9 @0x13]
0x1D3	PUSH(SLOAD(0x1))
0x1D4	PUSH(0x0)
0x1D6	DUP1
0x1D7	PUSH(SLOAD(POP()))
0x1D8	PUSH(0x40)
0x1DA	DUP1
0x1DB	PUSH(MLOAD(POP()))
0x1E7	DUP1
0x1E8	MSTORE(POP(), 0xA9059CBB * 0x2 ** 0xE0)
0x1F0	PUSH(0x2 ** 0xA0 - 0x1)
0x1F1	SWAP3
0x1F2	DUP4
0x1F6	DUP1
0x1F8	MSTORE(POP() + 0x4, POP() & POP())
0x1FB	DUP1
0x1FD	DUP5
0x1FF	MSTORE(POP() + 0x24, POP())
0x200	SWAP1
0x201	PUSH(MLOAD(POP()))
0x202	SWAP4
0x203	SWAP5
0x204	POP()
0x205	SWAP3
0x206	PUSH(POP() & POP())
0x207	SWAP3
0x208	PUSH(0xA9059CBB)
0x20D	SWAP3
0x20E	PUSH(0x44)
0x210	DUP2
0x211	DUP2
0x212	PUSH(POP() + POP())
0x213	SWAP4
0x214	PUSH(0x20)
0x216	SWAP4
0x217	SWAP3
0x218	DUP4
0x219	SWAP1
0x21C	SWAP1
0x21F	DUP2
0x220	SWAP1
0x221	DUP7
0x22C	JUMPI(0x2, !CALL(GAS() - 0x61DA, POP(), POP(), POP(), POP() + POP() - POP(), POP(), POP()))

# Stack: [@0x212 0xA9059CBB @0x206 @0xFC 0x0 :label9 @0x13]
0x22D	POP()
0x22E	POP()
0x235	POP()
0x239	JUMPI(:label12, !MLOAD(MLOAD(0x40)))

# Stack: [@0xFC 0x0 :label9 @0x13]
0x23A	PUSH(0x1)
0x23C	SWAP2
0x23D	POP()
0x241	JUMP(:label13)

